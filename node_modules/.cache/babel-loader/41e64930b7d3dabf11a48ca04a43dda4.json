{"ast":null,"code":"var _jsxFileName = \"D:\\\\nuntium orginal project\\\\nuntium\\\\src\\\\Components\\\\TagInput.js\";\nimport React, { useState } from 'react';\nimport { validateEmail } from '../helpers/validate';\n\nconst TagsInput = ({\n  label,\n  id,\n  name,\n  placeholder,\n  error,\n  onChange,\n  defaultTags,\n  emailValidation\n}) => {\n  const [value, setValue] = useState('');\n  const [tags, setTags] = useState(defaultTags ? defaultTags : []);\n  const [isActive, setIsActive] = useState(false);\n\n  const changeHandler = e => {\n    setValue(e.target.value);\n    onChange(name, tags);\n  };\n\n  const removeTag = tag => {\n    const arr = tags.filter(t => t !== tag);\n    setTags(arr);\n    onChange(name, arr);\n  };\n\n  const updateTagsHandler = e => {\n    e.preventDefault(); // Add tags if input is not empty and if input value is not comma\n\n    if (e.target.value !== '' && e.target.value !== ',') {\n      if (e.key === ',') {\n        const newTag = value.trim().split(',')[0];\n\n        if (emailValidation) {\n          if (!tags.includes(newTag) && newTag !== '' && validateEmail(newTag)) {\n            const arr = [...tags, newTag];\n            setTags(arr);\n            onChange(name, arr);\n          }\n        } else {\n          if (!tags.includes(newTag) && newTag !== '') {\n            const arr = [...tags, newTag];\n            setTags(arr);\n            onChange(name, arr);\n          }\n        }\n\n        setValue('');\n      } else if (e.key === 'Enter') {\n        const newTag = value.trim();\n\n        if (emailValidation) {\n          if (!tags.includes(newTag) && newTag !== '' && validateEmail(newTag)) {\n            const arr = [...tags, newTag];\n            setTags(arr);\n            onChange(name, arr);\n          }\n        } else {\n          if (!tags.includes(newTag) && newTag !== '') {\n            const arr = [...tags, newTag];\n            setTags(arr);\n            onChange(name, arr);\n          }\n        }\n\n        setValue('');\n      }\n    } // Remove tags if backspace is pressed\n\n\n    if (e.key === 'Backspace' && tags.length > 0) {\n      const copyOfTags = [...tags];\n      copyOfTags.pop();\n      setTags(copyOfTags);\n      onChange(name, copyOfTags);\n    }\n  };\n\n  const focusHandler = () => {\n    setIsActive(true);\n  };\n\n  const blurHandler = () => {\n    setIsActive(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: !isActive ? \"tags-input\" : \"tags-input active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, label && /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id ? id : name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, label), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tags-input__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tags-input__tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, tags.map((tag, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    className: \"tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, tag, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => removeTag(tag),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 58\n    }\n  })))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: placeholder,\n    name: name,\n    id: id ? id : name,\n    value: value,\n    onChange: changeHandler,\n    autoComplete: \"off\",\n    onKeyUp: updateTagsHandler,\n    onKeyDown: e => e.key === 'Enter' && e.preventDefault(),\n    onKeyPress: e => e.key === 'Enter' && e.preventDefault(),\n    onFocus: focusHandler,\n    onBlur: blurHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }))), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, error));\n};\n\nexport default TagsInput;","map":{"version":3,"sources":["D:/nuntium orginal project/nuntium/src/Components/TagInput.js"],"names":["React","useState","validateEmail","TagsInput","label","id","name","placeholder","error","onChange","defaultTags","emailValidation","value","setValue","tags","setTags","isActive","setIsActive","changeHandler","e","target","removeTag","tag","arr","filter","t","updateTagsHandler","preventDefault","key","newTag","trim","split","includes","length","copyOfTags","pop","focusHandler","blurHandler","map","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { validateEmail } from '../helpers/validate';\r\n\r\nconst TagsInput = ({ label, id, name, placeholder, error, onChange, defaultTags, emailValidation }) => {\r\n  const [value, setValue] = useState('');\r\n  const [tags, setTags] = useState(defaultTags ? defaultTags : []);\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const changeHandler = (e) => {\r\n    setValue(e.target.value);\r\n    onChange(name, tags);\r\n  }\r\n\r\n  const removeTag = (tag) => {\r\n    const arr = tags.filter(t => t !== tag);\r\n    setTags(arr);\r\n    onChange(name, arr);\r\n  }\r\n\r\n  const updateTagsHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Add tags if input is not empty and if input value is not comma\r\n    if(e.target.value !== '' && e.target.value !== ',') {\r\n\r\n      if(e.key === ',') {\r\n\r\n        const newTag = value.trim().split(',')[0];\r\n        if(emailValidation) {\r\n          if(!tags.includes(newTag) && newTag !== '' && validateEmail(newTag)) {\r\n            const arr = [...tags, newTag];\r\n            setTags(arr);\r\n            onChange(name, arr);\r\n          }\r\n        }else {\r\n          if(!tags.includes(newTag) && newTag !== '') {\r\n            const arr = [...tags, newTag];\r\n            setTags(arr);\r\n            onChange(name, arr);\r\n          }\r\n        }\r\n        setValue('');\r\n\r\n      } else if(e.key === 'Enter') {\r\n\r\n        const newTag = value.trim();\r\n        if(emailValidation) {\r\n          if(!tags.includes(newTag) && newTag !== '' && validateEmail(newTag)) {\r\n            const arr = [...tags, newTag];\r\n            setTags(arr);\r\n            onChange(name, arr);\r\n          }\r\n        }else {\r\n          if(!tags.includes(newTag) && newTag !== '') {\r\n            const arr = [...tags, newTag];\r\n            setTags(arr);\r\n            onChange(name, arr);\r\n          }\r\n        }\r\n        setValue('');\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // Remove tags if backspace is pressed\r\n    if(e.key === 'Backspace' && tags.length > 0) {\r\n      const copyOfTags = [...tags];\r\n      copyOfTags.pop();\r\n      setTags(copyOfTags);\r\n      onChange(name, copyOfTags);\r\n    }\r\n  }\r\n\r\n  const focusHandler = () => {\r\n    setIsActive(true);\r\n  }\r\n\r\n  const blurHandler = () => {\r\n    setIsActive(false);\r\n  }\r\n\r\n  return(\r\n    <div className={!isActive ? \"tags-input\" : \"tags-input active\"}>\r\n      {label && <label htmlFor={id ? id : name}>{label}</label>}\r\n      <div className=\"tags-input__wrapper\">\r\n        <div className=\"tags-input__tags\">\r\n          {tags.map((tag, i) => \r\n            <div key={i} className=\"tag\">\r\n              {tag} <span onClick={() => removeTag(tag)}><i className=\"fas fa-times-circle\"></i></span>\r\n            </div>\r\n          )}\r\n          <input \r\n            type=\"text\"\r\n            placeholder={placeholder}\r\n            name={name}\r\n            id={id ? id : name}\r\n            value={value}\r\n            onChange={changeHandler}\r\n            autoComplete=\"off\"\r\n            onKeyUp={updateTagsHandler}\r\n            onKeyDown={(e) => e.key === 'Enter' && e.preventDefault()}\r\n            onKeyPress={(e) => e.key === 'Enter' && e.preventDefault()}\r\n            onFocus={focusHandler}\r\n            onBlur={blurHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      {error && <div className=\"error\">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TagsInput;"]},"metadata":{},"sourceType":"module"}