{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSize } from 'react-use';\nexport default React.memo(SmartSideBar);\n\nfunction SmartSideBar(props) {\n  var sidebar = useRef(null);\n  var wrapper = useRef(null);\n  var direction = useRef(0);\n  var sidebarContent = useRef(null);\n  var transitionDuration = props.transitionDuration,\n      top = props.top,\n      debug = props.debug;\n\n  var _useSize = useSize(function (_ref) {\n    var height = _ref.height;\n    return React.createElement(\"div\", {\n      ref: sidebarContent\n    }, props.debug && React.createElement(\"h2\", null, height), props.children);\n  }),\n      _useSize2 = _slicedToArray(_useSize, 2),\n      sized = _useSize2[0],\n      height = _useSize2[1].height;\n\n  useEffect(function () {\n    if (navigator.userAgent.indexOf('MSIE') !== -1 || navigator.appVersion.indexOf('Trident/') > -1) {\n      sidebar.current.style.transform = 'translateZ(0)';\n    }\n  });\n  useEffect(function () {\n    var lastScrollTop = 0;\n    var windowHeight = 0;\n    var sidebarOffsetTop = 0;\n    var windowsHeightWithoutHeader = 0;\n    var topBoundary = 0;\n    var bottomBoundary = 0;\n    var state = 'default'; // oneOf[default, top, bottom, middle, defaultBottom]\n\n    /**\r\n     * направление скролла window\r\n     */\n\n    function updateScrollDirection() {\n      var scroll = window.pageYOffset;\n\n      if (lastScrollTop === scroll) {\n        return;\n      }\n\n      if (lastScrollTop <= scroll) {\n        direction.current = 1;\n      } else {\n        direction.current = -1;\n      }\n\n      lastScrollTop = scroll;\n    } // получаем координаты элемента в контексте документа\n\n\n    function getCoords(elem) {\n      var box = elem.getBoundingClientRect();\n      return {\n        top: box.top + window.pageYOffset,\n        left: box.left + window.pageXOffset\n      };\n    }\n\n    function initValues() {\n      windowHeight = window.innerHeight;\n      sidebarOffsetTop = getCoords(sidebar.current).top;\n      windowsHeightWithoutHeader = windowHeight - top;\n      initBoundary();\n      sidebarContent.current.style.width = sidebar.current.getBoundingClientRect().width + 'px';\n    }\n\n    function initBoundary() {\n      topBoundary = wrapper.current.offsetTop;\n      bottomBoundary = getCoords(sidebar.current).top + sidebar.current.getBoundingClientRect().height;\n    }\n\n    function reInit() {\n      initValues();\n      checkState();\n    }\n\n    function throwDebugMessage(message, type) {\n      if (debug) {\n        switch (type) {\n          case 'info':\n            console.info(message);\n            break;\n\n          case 'warn':\n            console.warn(message);\n            break;\n\n          case 'error':\n            console.error(message);\n            break;\n\n          default:\n            console.log(message);\n            break;\n        }\n      }\n    }\n\n    function applyTransition() {\n      sidebarContent.current.style.transitionProperty = 'top';\n      sidebarContent.current.style.transitionDuration = transitionDuration + 's';\n    }\n\n    function removeTransition() {\n      sidebarContent.current.style.transitionProperty = 'none';\n      sidebarContent.current.style.transitionDuration = '0s';\n    }\n\n    function setDefaultBottomState() {\n      var withStyles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      state = 'defaultBottom';\n\n      if (withStyles) {\n        sidebarContent.current.style.top = 'auto';\n        sidebarContent.current.style.position = 'absolute';\n        sidebarContent.current.style.bottom = 0;\n      }\n    }\n\n    function setMiddleState() {\n      var withStyles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      state = 'middle';\n\n      if (withStyles) {\n        var offsetTop = getCoords(sidebarContent.current).top;\n        sidebarContent.current.style.top = offsetTop - sidebarOffsetTop + 'px';\n        sidebarContent.current.style.position = 'absolute';\n        sidebarContent.current.style.bottom = 'auto';\n      }\n    }\n\n    function setTopState() {\n      var withStyles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      state = 'top';\n\n      if (withStyles) {\n        sidebarContent.current.style.top = top + 'px';\n        sidebarContent.current.style.position = 'fixed';\n        sidebarContent.current.style.bottom = 'auto';\n      }\n    }\n\n    function setDefaultState() {\n      var withStyles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      state = 'default';\n\n      if (withStyles) {\n        sidebarContent.current.style.top = 'auto';\n        sidebarContent.current.style.position = 'relative';\n        sidebarContent.current.style.bottom = 'auto';\n      }\n    }\n\n    function setBottomState() {\n      var withStyles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      state = 'bottom';\n\n      if (withStyles) {\n        sidebarContent.current.style.top = 'auto';\n        sidebarContent.current.style.position = 'fixed';\n        sidebarContent.current.style.bottom = 0;\n      }\n    }\n\n    function setState(state, isApplyTransition) {\n      var ignoreTransition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var withStyles = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!ignoreTransition) {\n        if (isApplyTransition) {\n          applyTransition();\n        } else {\n          removeTransition();\n        }\n      }\n\n      switch (state) {\n        case 'defaultBottom':\n          setDefaultBottomState(withStyles);\n          break;\n\n        case 'middle':\n          setMiddleState(withStyles);\n          break;\n\n        case 'top':\n          setTopState(withStyles);\n          break;\n\n        case 'bottom':\n          setBottomState(withStyles);\n          break;\n\n        case 'default':\n          setDefaultState(withStyles);\n          break;\n      }\n    }\n\n    function checkState() {\n      var height = sidebarContent.current.getBoundingClientRect().height;\n      var scroll = window.pageYOffset;\n      var wrapperOffsetTop = getCoords(wrapper.current).top;\n      var offsetTop = getCoords(sidebarContent.current).top;\n      var isBottomOfThePage = bottomBoundary < scroll + windowHeight; // находимся внизу страницы\n\n      var isSidebarOverlapedByTopElement = height < bottomBoundary - scroll - top; // меню меньше разрешенной области\n\n      var isSidebarScrollBiggerThanOffsetTop = scroll + sidebarOffsetTop > top; // находимся в середине страницы\n\n      var isSidebarContentHeightLessThanWindowsHeight = height < windowsHeightWithoutHeader; // меню меньше области, доступной для просмотра\n\n      var isScrollBiggerThanWrapperOffsetTop = scroll + top > wrapperOffsetTop;\n      sidebar.current.style.height = sidebar.current.getBoundingClientRect().height; // если еще никуда не скролили\n\n      if (direction.current === 0) {\n        throwDebugMessage('если еще никуда не скролили');\n\n        if (isBottomOfThePage) {\n          throwDebugMessage('находимся внизу страницы');\n\n          if (isSidebarOverlapedByTopElement) {\n            throwDebugMessage('меню меньше разрешенной области'); // пора прибивать меню к верху\n\n            if (isScrollBiggerThanWrapperOffsetTop) {\n              throwDebugMessage('пора прибивать меню к верху');\n              setState('top');\n            } else {\n              setState('default');\n            }\n          } else {\n            // меню больше разрешенной области\n            throwDebugMessage('меню больше разрешенной области');\n            setState('defaultBottom');\n          } // находимся в середине страницы\n\n        } else if (isSidebarScrollBiggerThanOffsetTop) {\n          throwDebugMessage('находимся в середине страницы'); // меню меньше разрешенной области\n\n          if (isSidebarContentHeightLessThanWindowsHeight) {\n            throwDebugMessage('меню меньше разрешенной области'); // пора прибивать меню к верху\n\n            if (isScrollBiggerThanWrapperOffsetTop) {\n              throwDebugMessage('пора прибивать меню к верху');\n              setState('top');\n            }\n          } else {\n            // меню больше разрешенной области\n            throwDebugMessage('меню больше разрешенной области');\n\n            if (height > bottomBoundary - scroll - top) {\n              setState('defaultBottom');\n            } else {\n              if (isScrollBiggerThanWrapperOffsetTop) {\n                throwDebugMessage('пора прибивать меню к верху');\n                setState('top');\n              }\n            }\n          }\n        }\n      } else {\n        // меню меньше области, доступной для просмотра\n        if (isSidebarContentHeightLessThanWindowsHeight) {\n          throwDebugMessage('меню меньше разрешенной области'); // находимся внизу страницы\n\n          if (isBottomOfThePage) {\n            throwDebugMessage('находимся внизу страницы'); // меню меньше области показа\n\n            if (isSidebarOverlapedByTopElement) {\n              throwDebugMessage('меню меньше области показа'); // пора прибивать меню к верху\n\n              if (isScrollBiggerThanWrapperOffsetTop) {\n                throwDebugMessage('пора прибивать меню к верху');\n                setState('top', true);\n              } else {\n                setState('default', true);\n              }\n            } else {\n              // меню больше разрешенной области\n              throwDebugMessage('меню больше разрешенной области');\n              setState('defaultBottom', true);\n            } // находимся в середине страницы\n\n          } else if (isScrollBiggerThanWrapperOffsetTop) {\n            throwDebugMessage('находимся в середине страницы'); // меню меньше разрешенной области\n\n            setState('top', true);\n          } else {\n            setState('default', true);\n          } // меню больше области, доступной для просмотра\n\n        } else {\n          throwDebugMessage('меню больше области, доступной для просмотра'); // сколим вниз\n\n          if (direction.current === 1) {\n            throwDebugMessage('сколим вниз'); // пора прибивать меню в низу экрана\n\n            if (Math.ceil(scroll + windowHeight) >= Math.floor(height + offsetTop)) {\n              throwDebugMessage('пора прибивать меню в низу экрана'); // находимся внизу страницы\n\n              if (isBottomOfThePage) {\n                throwDebugMessage('находимся внизу страницы');\n                setState('defaultBottom'); // меню больше разрешенной области (раздвигается вверх)\n              } else if (offsetTop < wrapperOffsetTop) {\n                throwDebugMessage('меню больше разрешенной области (раздвигается вверх)');\n                setState('default');\n              } else {\n                throwDebugMessage('находимся в середине страницы');\n                setState('bottom');\n              }\n            } else {\n              if (height + top > bottomBoundary) {\n                setState('defaultBottom');\n              } else {\n                setState('middle');\n              }\n            } // сколим вверх\n\n          } else if (direction.current === -1) {\n            throwDebugMessage('сколим вверх'); // находимся в середине страницы\n\n            if (scroll <= Math.ceil(offsetTop - top)) {\n              throwDebugMessage('находимся в середине страницы'); // находимся вверху страницы\n\n              if (scroll < wrapperOffsetTop - top) {\n                throwDebugMessage('находимся вверху страницы');\n                setState('default');\n              } else {\n                throwDebugMessage('прибиваем меню к верху области просмотра');\n                setState('top');\n              }\n            } else {\n              // находимся внизу страницы\n              if (isBottomOfThePage) {\n                throwDebugMessage('находимся внизу страницы');\n                setState('defaultBottom');\n              } else {\n                setState('middle');\n              }\n            }\n          }\n        }\n      }\n\n      throwDebugMessage(state);\n\n      if (state !== 'default' && Math.ceil(sidebarContent.current.offsetHeight) >= Math.ceil(sidebar.current.offsetHeight - topBoundary)) {\n        setState('default');\n      }\n\n      setState(state, null, true, true);\n      sidebar.current.style.height = '100%';\n      throwDebugMessage(state);\n    }\n\n    initValues();\n    checkState();\n    window.addEventListener('scroll', updateScrollDirection, true);\n    window.addEventListener('scroll', checkState, true);\n    window.addEventListener('resize', reInit, true);\n    return function () {\n      window.removeEventListener('scroll', updateScrollDirection, true);\n      window.removeEventListener('scroll', checkState, true);\n      window.removeEventListener('resize', reInit, true);\n    };\n  }, [transitionDuration, top, debug, height]);\n  var styles = {\n    position: 'relative',\n    height: '100%'\n  };\n  return React.createElement(\"div\", {\n    style: styles,\n    ref: sidebar,\n    suppressHydrationWarning: true\n  }, props.staticContent, React.createElement(\"div\", {\n    ref: wrapper\n  }, sized));\n}\n\nSmartSideBar.propTypes = {\n  children: PropTypes.node,\n  staticContent: PropTypes.node,\n  debug: PropTypes.bool,\n  top: PropTypes.number,\n  transitionDuration: PropTypes.number\n};\nSmartSideBar.defaultProps = {\n  debug: false,\n  top: 0,\n  transitionSpeed: 0\n};","map":{"version":3,"sources":["../src/SmartSideBar.js"],"names":["React","sidebar","useRef","wrapper","direction","sidebarContent","transitionDuration","top","debug","props","sized","height","useSize","useEffect","navigator","lastScrollTop","windowHeight","sidebarOffsetTop","windowsHeightWithoutHeader","topBoundary","bottomBoundary","state","scroll","window","box","elem","left","pageXOffset","getCoords","initBoundary","initValues","checkState","console","withStyles","offsetTop","ignoreTransition","applyTransition","removeTransition","setDefaultBottomState","setMiddleState","setTopState","setBottomState","setDefaultState","wrapperOffsetTop","isBottomOfThePage","isSidebarOverlapedByTopElement","isSidebarScrollBiggerThanOffsetTop","isSidebarContentHeightLessThanWindowsHeight","isScrollBiggerThanWrapperOffsetTop","throwDebugMessage","setState","Math","styles","position","SmartSideBar","children","PropTypes","staticContent","number","transitionSpeed"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useSize } from 'react-use'\r\n\r\nexport default React.memo(SmartSideBar)\r\n\r\nfunction SmartSideBar (props) {\r\n  const sidebar = useRef(null)\r\n  const wrapper = useRef(null)\r\n  const direction = useRef(0)\r\n  const sidebarContent = useRef(null)\r\n  const { transitionDuration, top, debug } = props\r\n\r\n  const [sized, { height }] = useSize(\r\n    ({ height }) => (\r\n      <div ref={sidebarContent}>\r\n        {props.debug && (\r\n          <h2>{height}</h2>\r\n        )}\r\n        {props.children}\r\n      </div>\r\n    )\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (navigator.userAgent.indexOf('MSIE') !== -1 || navigator.appVersion.indexOf('Trident/') > -1) {\r\n      sidebar.current.style.transform = 'translateZ(0)'\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    let lastScrollTop = 0\r\n    let windowHeight = 0\r\n    let sidebarOffsetTop = 0\r\n    let windowsHeightWithoutHeader = 0\r\n    let topBoundary = 0\r\n    let bottomBoundary = 0\r\n    let state = 'default' // oneOf[default, top, bottom, middle, defaultBottom]\r\n\r\n    /**\r\n     * направление скролла window\r\n     */\r\n    function updateScrollDirection () {\r\n      const scroll = window.pageYOffset\r\n      if (lastScrollTop === scroll) {\r\n        return\r\n      }\r\n      if (lastScrollTop <= scroll) {\r\n        direction.current = 1\r\n      } else {\r\n        direction.current = -1\r\n      }\r\n      lastScrollTop = scroll\r\n    }\r\n\r\n    // получаем координаты элемента в контексте документа\r\n    function getCoords (elem) {\r\n      const box = elem.getBoundingClientRect()\r\n\r\n      return {\r\n        top: box.top + window.pageYOffset,\r\n        left: box.left + window.pageXOffset\r\n      }\r\n    }\r\n\r\n    function initValues () {\r\n      windowHeight = window.innerHeight\r\n      sidebarOffsetTop = getCoords(sidebar.current).top\r\n      windowsHeightWithoutHeader = windowHeight - top\r\n      initBoundary()\r\n      sidebarContent.current.style.width = sidebar.current.getBoundingClientRect().width + 'px'\r\n    }\r\n\r\n    function initBoundary () {\r\n      topBoundary = wrapper.current.offsetTop\r\n      bottomBoundary = getCoords(sidebar.current).top + sidebar.current.getBoundingClientRect().height\r\n    }\r\n\r\n    function reInit () {\r\n      initValues()\r\n      checkState()\r\n    }\r\n\r\n    function throwDebugMessage (message, type) {\r\n      if (debug) {\r\n        switch (type) {\r\n          case 'info':\r\n            console.info(message)\r\n            break\r\n          case 'warn':\r\n            console.warn(message)\r\n            break\r\n          case 'error':\r\n            console.error(message)\r\n            break\r\n          default:\r\n            console.log(message)\r\n            break\r\n        }\r\n      }\r\n    }\r\n\r\n    function applyTransition () {\r\n      sidebarContent.current.style.transitionProperty = 'top'\r\n      sidebarContent.current.style.transitionDuration = transitionDuration + 's'\r\n    }\r\n\r\n    function removeTransition () {\r\n      sidebarContent.current.style.transitionProperty = 'none'\r\n      sidebarContent.current.style.transitionDuration = '0s'\r\n    }\r\n\r\n    function setDefaultBottomState (withStyles = false) {\r\n      state = 'defaultBottom'\r\n      if (withStyles) {\r\n        sidebarContent.current.style.top = 'auto'\r\n        sidebarContent.current.style.position = 'absolute'\r\n        sidebarContent.current.style.bottom = 0\r\n      }\r\n    }\r\n\r\n    function setMiddleState (withStyles = false) {\r\n      state = 'middle'\r\n      if (withStyles) {\r\n        const offsetTop = getCoords(sidebarContent.current).top\r\n        sidebarContent.current.style.top = offsetTop - sidebarOffsetTop + 'px'\r\n        sidebarContent.current.style.position = 'absolute'\r\n        sidebarContent.current.style.bottom = 'auto'\r\n      }\r\n    }\r\n\r\n    function setTopState (withStyles = false) {\r\n      state = 'top'\r\n      if (withStyles) {\r\n        sidebarContent.current.style.top = top + 'px'\r\n        sidebarContent.current.style.position = 'fixed'\r\n        sidebarContent.current.style.bottom = 'auto'\r\n      }\r\n    }\r\n\r\n    function setDefaultState (withStyles = false) {\r\n      state = 'default'\r\n      if (withStyles) {\r\n        sidebarContent.current.style.top = 'auto'\r\n        sidebarContent.current.style.position = 'relative'\r\n        sidebarContent.current.style.bottom = 'auto'\r\n      }\r\n    }\r\n\r\n    function setBottomState (withStyles = false) {\r\n      state = 'bottom'\r\n      if (withStyles) {\r\n        sidebarContent.current.style.top = 'auto'\r\n        sidebarContent.current.style.position = 'fixed'\r\n        sidebarContent.current.style.bottom = 0\r\n      }\r\n    }\r\n\r\n    function setState (state, isApplyTransition, ignoreTransition = false, withStyles = false) {\r\n      if (!ignoreTransition) {\r\n        if (isApplyTransition) {\r\n          applyTransition()\r\n        } else {\r\n          removeTransition()\r\n        }\r\n      }\r\n      switch (state) {\r\n        case 'defaultBottom':\r\n          setDefaultBottomState(withStyles)\r\n          break\r\n        case 'middle':\r\n          setMiddleState(withStyles)\r\n          break\r\n        case 'top':\r\n          setTopState(withStyles)\r\n          break\r\n        case 'bottom':\r\n          setBottomState(withStyles)\r\n          break\r\n        case 'default':\r\n          setDefaultState(withStyles)\r\n          break\r\n      }\r\n    }\r\n\r\n    function checkState () {\r\n      const height = sidebarContent.current.getBoundingClientRect().height\r\n      const scroll = window.pageYOffset\r\n      const wrapperOffsetTop = getCoords(wrapper.current).top\r\n      const offsetTop = getCoords(sidebarContent.current).top\r\n\r\n      const isBottomOfThePage = bottomBoundary < scroll + windowHeight // находимся внизу страницы\r\n      const isSidebarOverlapedByTopElement = height < bottomBoundary - scroll - top // меню меньше разрешенной области\r\n      const isSidebarScrollBiggerThanOffsetTop = scroll + sidebarOffsetTop > top // находимся в середине страницы\r\n      const isSidebarContentHeightLessThanWindowsHeight = height < windowsHeightWithoutHeader // меню меньше области, доступной для просмотра\r\n      const isScrollBiggerThanWrapperOffsetTop = scroll + top > wrapperOffsetTop\r\n      sidebar.current.style.height = sidebar.current.getBoundingClientRect().height\r\n\r\n      // если еще никуда не скролили\r\n      if (direction.current === 0) {\r\n        throwDebugMessage('если еще никуда не скролили')\r\n        if (isBottomOfThePage) {\r\n          throwDebugMessage('находимся внизу страницы')\r\n          if (isSidebarOverlapedByTopElement) {\r\n            throwDebugMessage('меню меньше разрешенной области')\r\n            // пора прибивать меню к верху\r\n            if (isScrollBiggerThanWrapperOffsetTop) {\r\n              throwDebugMessage('пора прибивать меню к верху')\r\n              setState('top')\r\n            } else {\r\n              setState('default')\r\n            }\r\n          } else { // меню больше разрешенной области\r\n            throwDebugMessage('меню больше разрешенной области')\r\n            setState('defaultBottom')\r\n          }\r\n          // находимся в середине страницы\r\n        } else if (isSidebarScrollBiggerThanOffsetTop) {\r\n          throwDebugMessage('находимся в середине страницы')\r\n          // меню меньше разрешенной области\r\n          if (isSidebarContentHeightLessThanWindowsHeight) {\r\n            throwDebugMessage('меню меньше разрешенной области')\r\n            // пора прибивать меню к верху\r\n            if (isScrollBiggerThanWrapperOffsetTop) {\r\n              throwDebugMessage('пора прибивать меню к верху')\r\n              setState('top')\r\n            }\r\n          } else { // меню больше разрешенной области\r\n            throwDebugMessage('меню больше разрешенной области')\r\n            if (height > bottomBoundary - scroll - top) {\r\n              setState('defaultBottom')\r\n            } else {\r\n              if (isScrollBiggerThanWrapperOffsetTop) {\r\n                throwDebugMessage('пора прибивать меню к верху')\r\n                setState('top')\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        // меню меньше области, доступной для просмотра\r\n        if (isSidebarContentHeightLessThanWindowsHeight) {\r\n          throwDebugMessage('меню меньше разрешенной области')\r\n          // находимся внизу страницы\r\n          if (isBottomOfThePage) {\r\n            throwDebugMessage('находимся внизу страницы')\r\n            // меню меньше области показа\r\n            if (isSidebarOverlapedByTopElement) {\r\n              throwDebugMessage('меню меньше области показа')\r\n              // пора прибивать меню к верху\r\n              if (isScrollBiggerThanWrapperOffsetTop) {\r\n                throwDebugMessage('пора прибивать меню к верху')\r\n                setState('top', true)\r\n              } else {\r\n                setState('default', true)\r\n              }\r\n            } else { // меню больше разрешенной области\r\n              throwDebugMessage('меню больше разрешенной области')\r\n              setState('defaultBottom', true)\r\n            }\r\n            // находимся в середине страницы\r\n          } else if (isScrollBiggerThanWrapperOffsetTop) {\r\n            throwDebugMessage('находимся в середине страницы')\r\n            // меню меньше разрешенной области\r\n            setState('top', true)\r\n          } else {\r\n            setState('default', true)\r\n          }\r\n          // меню больше области, доступной для просмотра\r\n        } else {\r\n          throwDebugMessage('меню больше области, доступной для просмотра')\r\n          // сколим вниз\r\n          if (direction.current === 1) {\r\n            throwDebugMessage('сколим вниз')\r\n            // пора прибивать меню в низу экрана\r\n            if (\r\n              Math.ceil(scroll + windowHeight) >= Math.floor(height + offsetTop)\r\n            ) {\r\n              throwDebugMessage('пора прибивать меню в низу экрана')\r\n              // находимся внизу страницы\r\n              if (isBottomOfThePage) {\r\n                throwDebugMessage('находимся внизу страницы')\r\n                setState('defaultBottom')\r\n                // меню больше разрешенной области (раздвигается вверх)\r\n              } else if (offsetTop < wrapperOffsetTop) {\r\n                throwDebugMessage('меню больше разрешенной области (раздвигается вверх)')\r\n                setState('default')\r\n              } else {\r\n                throwDebugMessage('находимся в середине страницы')\r\n                setState('bottom')\r\n              }\r\n            } else {\r\n              if (height + top > bottomBoundary) {\r\n                setState('defaultBottom')\r\n              } else {\r\n                setState('middle')\r\n              }\r\n            }\r\n            // сколим вверх\r\n          } else if (direction.current === -1) {\r\n            throwDebugMessage('сколим вверх')\r\n            // находимся в середине страницы\r\n            if (scroll <= Math.ceil(offsetTop - top)) {\r\n              throwDebugMessage('находимся в середине страницы')\r\n              // находимся вверху страницы\r\n              if (scroll < wrapperOffsetTop - top) {\r\n                throwDebugMessage('находимся вверху страницы')\r\n                setState('default')\r\n              } else {\r\n                throwDebugMessage('прибиваем меню к верху области просмотра')\r\n                setState('top')\r\n              }\r\n            } else {\r\n              // находимся внизу страницы\r\n              if (isBottomOfThePage) {\r\n                throwDebugMessage('находимся внизу страницы')\r\n                setState('defaultBottom')\r\n              } else {\r\n                setState('middle')\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      throwDebugMessage(state)\r\n      if (state !== 'default' && Math.ceil(sidebarContent.current.offsetHeight) >= Math.ceil(sidebar.current.offsetHeight - topBoundary)) {\r\n        setState('default')\r\n      }\r\n      setState(state, null, true, true)\r\n      sidebar.current.style.height = '100%'\r\n      throwDebugMessage(state)\r\n    }\r\n\r\n    initValues()\r\n    checkState()\r\n    window.addEventListener('scroll', updateScrollDirection, true)\r\n    window.addEventListener('scroll', checkState, true)\r\n    window.addEventListener('resize', reInit, true)\r\n    return () => {\r\n      window.removeEventListener('scroll', updateScrollDirection, true)\r\n      window.removeEventListener('scroll', checkState, true)\r\n      window.removeEventListener('resize', reInit, true)\r\n    }\r\n  }, [transitionDuration, top, debug, height])\r\n\r\n  const styles = { position: 'relative', height: '100%' }\r\n\r\n  return (\r\n    <div style={styles} ref={sidebar} suppressHydrationWarning>\r\n      {props.staticContent}\r\n      <div ref={wrapper}>\r\n        {sized}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nSmartSideBar.propTypes = {\r\n  children: PropTypes.node,\r\n  staticContent: PropTypes.node,\r\n  debug: PropTypes.bool,\r\n  top: PropTypes.number,\r\n  transitionDuration: PropTypes.number\r\n}\r\n\r\nSmartSideBar.defaultProps = {\r\n  debug: false,\r\n  top: 0,\r\n  transitionSpeed: 0\r\n}\r\n"]},"metadata":{},"sourceType":"module"}