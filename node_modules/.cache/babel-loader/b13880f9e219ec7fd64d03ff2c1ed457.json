{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { PureComponent } from 'react';\nimport { getDisplayTimeBySeconds } from './utils';\n\nvar CurrentTime = function (_PureComponent) {\n  _inheritsLoose(CurrentTime, _PureComponent);\n\n  function CurrentTime(props) {\n    var _this;\n\n    _this = _PureComponent.call(this, props) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"audio\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"hasAddedAudioEventListener\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currentTime: _this.props.defaultCurrentTime\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAudioCurrentTimeChange\", function (e) {\n      var audio = e.target;\n      var _this$props = _this.props,\n          isLeftTime = _this$props.isLeftTime,\n          timeFormat = _this$props.timeFormat,\n          defaultCurrentTime = _this$props.defaultCurrentTime;\n\n      _this.setState({\n        currentTime: getDisplayTimeBySeconds(isLeftTime ? audio.duration - audio.currentTime : audio.currentTime, audio.duration, timeFormat) || defaultCurrentTime\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addAudioEventListeners\", function () {\n      var audio = _this.props.audio;\n\n      if (audio && !_this.hasAddedAudioEventListener) {\n        _this.audio = audio;\n        _this.hasAddedAudioEventListener = true;\n        audio.addEventListener('timeupdate', _this.handleAudioCurrentTimeChange);\n        audio.addEventListener('loadedmetadata', _this.handleAudioCurrentTimeChange);\n      }\n    });\n\n    var _audio = props.audio,\n        _defaultCurrentTime = props.defaultCurrentTime,\n        _isLeftTime = props.isLeftTime,\n        _timeFormat = props.timeFormat;\n    var currentTime = _defaultCurrentTime;\n\n    if (_audio) {\n      currentTime = getDisplayTimeBySeconds(_isLeftTime ? _audio.duration - _audio.currentTime : _audio.currentTime, _audio.duration, _timeFormat);\n    }\n\n    _this.state = {\n      currentTime: currentTime\n    };\n    return _this;\n  }\n\n  var _proto = CurrentTime.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.addAudioEventListeners();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.addAudioEventListeners();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.audio && this.hasAddedAudioEventListener) {\n      this.audio.removeEventListener('timeupdate', this.handleAudioCurrentTimeChange);\n      this.audio.removeEventListener('loadedmetadata', this.handleAudioCurrentTimeChange);\n    }\n  };\n\n  _proto.render = function render() {\n    return this.state.currentTime;\n  };\n\n  return CurrentTime;\n}(PureComponent);\n\nexport default CurrentTime;","map":{"version":3,"sources":["D:/nuntium orginal project/nuntium/node_modules/react-h5-audio-player/es/CurrentTime.js"],"names":["_assertThisInitialized","_inheritsLoose","_defineProperty","PureComponent","getDisplayTimeBySeconds","CurrentTime","_PureComponent","props","_this","call","currentTime","defaultCurrentTime","e","audio","target","_this$props","isLeftTime","timeFormat","setState","duration","hasAddedAudioEventListener","addEventListener","handleAudioCurrentTimeChange","_audio","_defaultCurrentTime","_isLeftTime","_timeFormat","state","_proto","prototype","componentDidMount","addAudioEventListeners","componentDidUpdate","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { PureComponent } from 'react';\nimport { getDisplayTimeBySeconds } from './utils';\n\nvar CurrentTime = function (_PureComponent) {\n  _inheritsLoose(CurrentTime, _PureComponent);\n\n  function CurrentTime(props) {\n    var _this;\n\n    _this = _PureComponent.call(this, props) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"audio\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"hasAddedAudioEventListener\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currentTime: _this.props.defaultCurrentTime\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAudioCurrentTimeChange\", function (e) {\n      var audio = e.target;\n      var _this$props = _this.props,\n          isLeftTime = _this$props.isLeftTime,\n          timeFormat = _this$props.timeFormat,\n          defaultCurrentTime = _this$props.defaultCurrentTime;\n\n      _this.setState({\n        currentTime: getDisplayTimeBySeconds(isLeftTime ? audio.duration - audio.currentTime : audio.currentTime, audio.duration, timeFormat) || defaultCurrentTime\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addAudioEventListeners\", function () {\n      var audio = _this.props.audio;\n\n      if (audio && !_this.hasAddedAudioEventListener) {\n        _this.audio = audio;\n        _this.hasAddedAudioEventListener = true;\n        audio.addEventListener('timeupdate', _this.handleAudioCurrentTimeChange);\n        audio.addEventListener('loadedmetadata', _this.handleAudioCurrentTimeChange);\n      }\n    });\n\n    var _audio = props.audio,\n        _defaultCurrentTime = props.defaultCurrentTime,\n        _isLeftTime = props.isLeftTime,\n        _timeFormat = props.timeFormat;\n    var currentTime = _defaultCurrentTime;\n\n    if (_audio) {\n      currentTime = getDisplayTimeBySeconds(_isLeftTime ? _audio.duration - _audio.currentTime : _audio.currentTime, _audio.duration, _timeFormat);\n    }\n\n    _this.state = {\n      currentTime: currentTime\n    };\n    return _this;\n  }\n\n  var _proto = CurrentTime.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.addAudioEventListeners();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.addAudioEventListeners();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.audio && this.hasAddedAudioEventListener) {\n      this.audio.removeEventListener('timeupdate', this.handleAudioCurrentTimeChange);\n      this.audio.removeEventListener('loadedmetadata', this.handleAudioCurrentTimeChange);\n    }\n  };\n\n  _proto.render = function render() {\n    return this.state.currentTime;\n  };\n\n  return CurrentTime;\n}(PureComponent);\n\nexport default CurrentTime;"]},"metadata":{},"sourceType":"module"}